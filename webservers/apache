
APACHE2 Basics

1) configuration files

   /etc/apache2/apache2.conf
   /etc/apache2/httpd.conf
   /etc/apache2/ports.conf
   /etc/apache2/sites-available/default-ssl.conf

2) default location for files servied up by Apache

   /var/www/html
   /var/www/wsgi-scripts


3) start stop commands
   using the supplied "apachectl" , usually located in /usr/sbin/ , note apachectl is a symlink to apache2ctl

   apachectl start     # this will start the server if its not running
   apachectl graceful  # restart server , will reload configs and allow any existing connections to finish
   apachectl restart   # restart server , will reload configs and terminate existing connections right away
   apachectl stop      # shut down server now
   /etc/init.d/apache2 restart


4) ssl configuration

   /etc/apache2/sites-available/default-ssl.conf


   <IfModule mod_ssl.c>
        ServerName <the_server_your_hosting_on>
        <VirtualHost *:80>
                Redirect permanent / https://www.yourdomain.com
        </VirtualHost>
        <VirtualHost _default_:443>

                ServerAdmin webmaster@localhost
                WSGIScriptAlias /myapp /var/www/wsgi-scripts/<your_script_name>
                DocumentRoot /var/www/html
        </VirtualHost>

5) python3 wsgi install

    sudo apt-get install libapache2-mod-wsgi-py3


6) wsgi frameworks - calling python from the web

   Werkzeug
   sudo apt-get install redis-server

   Flask 
   based on Werkzeug and Jinja2
      http://flask.pocoo.org/docs/0.12/deploying/mod_wsgi/

   from flask import Flask
   from flask_sslify import SSLify

   app = Flask(__name__)
   sslify = SSLify(app)

   wsgi intro:
   https://www.shellhacks.com/modwsgi-hello-world-example/
   http://wsgi.tutorial.codepoint.net/parsing-the-request-post


7) enable modules in apache2
  
    a2enmod

8) nodejs with apache  
 
   1) enable proxy_http
	a2enmod proxy_http
 
   2) configure path in default-ssl.conf

   <VirtualHost _default_:443>  
     ProxyPass /node http://localhost:8000
   </VirtualHost>

   // simple nodejs server
   var http = require('http')
   http.createServer(function(req, res) {
    res.writeHead(200, {'Content-Type': 'text/plain'});
    res.end('Hello Apache from JRR nodejs!\n');
   }).listen(8000,'127.0.0.1');
   

*) TLS
   Transport Layer Security


*) python3.7.3 install on linux
   sudo wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz
   cd Python-3.7.3
   sudo ./configure --enable-optimizations
   sudo make altinstall


